// li {
//     .set-li-pipe(30px, 25px, #c2c2c2); // li pipe
// }
// .set-li-pipe(@padding-left: 30px; @height: 25px; @border-color: #333;){
//     padding-left: @padding-left;
//     position: relative;
//     &::before {
//         margin-left: @padding-left / 2;
//         height: @height;
//         margin-top: 0 - @height / 2;
//         background-color: @border-color;
//         content: '';
//         display: block;
//         overflow: hidden;
//         position: absolute;
//         top: 50%;
//         left: 0;
//         width: 1px;
//     }
//     &:first-child {
//         padding-left: 0;
//         &::before {
//             display: none;
//         }
//     }
// }
//
// .get-percent(@i, @n) { // 퍼센트 구하기
//     @percent: percentage(@i / @n);
// }
//
// .set-focus-outline(@color: #D7F07F) {
//     &:focus {
//         outline: 3px solid @color;
//         outline: thin dotted;
//         outline: 3px auto -webkit-focus-ring-color; // webkit
//         outline-offset: -2px;
//     }
// }

.img(@file, @type: png) {
    background-image: url('@{base-path-images}/@{file}.@{type}');
}

.set-icon-size(@x, @y, @retina: true) when (@retina = false) {
    width: @x;
    height: @y;
    background-size: @x @y;
}

.set-icon-size(@x, @y, @retina: true) when (@retina = true) {
    @width: @x / 2;
    @height: @y / 2;
    width: @width;
    height: @height;
    background-size: @width @height;
}

.set-icon(@x, @y, @file, @retina: false, @type: png) {
    content: '';
    .img(@file, @type);
    .set-icon-size(@x, @y, @retina);
}

// image sprite maker
// .set-sprite(@x, @y, @width, @height, @automate: false) when (@automate = false) {
//     background-position: 0-(@width * @x) 0-(@height * @y);
// }
//
// .set-sprite(@x, @y, @width, @height, @automate: false) when (@automate = true) {
//     background-position: 0-(@width * @x) 0-(@height * @y);
//     width: @width;
//     height: @height;
//     background-repeat: no-repeat;
// }
//
// .set-focus-shadow(@color: @base-input-focus-color) { // 포커싱 후 섀도우 효과
//   .transition(~"border-color ease-in-out .2s, box-shadow ease-in-out .2s");
//   &:focus {
//     // border-color: @color;
//     // .box-shadow(0 0 5px @color);
//     border: 0;
//   }
//   &:-ms-clear,
//   &:-ms-reveal {
//       display: none;
//       width: 0;
//       height: 0;
//   }
//   &::-ms-clear,
//   &::-ms-reveal {
//       display: none;
//       width: 0;
//       height: 0;
//   }
// }
//
// // Resize anything
// .set-resizable(@direction) {
//     resize  : @direction; // Options: horizontal, vertical, both
//     overflow: auto; // Safari fix
// }




// ==========================================================================
// Base – Mixins
// ==========================================================================

// Font sizes (primary sizing in `rem` units with a fallback of `px`)
// Example usage @include font-size(18);
.set-font-size (@size) {
    @remValue: @size / 16;
    @pxValue: (@size);
    font-size: ~"@{pxValue}px";
    font-size: ~"@{remValue}rem";
}

// Line height sizes (primary sizing in `rem` units with a fallback of `px`)
// Example usage @include line-height(22);
.set-line-height (@size) {
    @remValue: @size / 16;
    @pxValue: (@size);
    line-height: ~"@{pxValue}px";
    line-height: ~"@{remValue}rem";
}

// Background Color with Opacity
// Example Usage: @include bg-rgba(#111, 50%);
.set-background-alpha(@color,@alpha) {
    @rgba: rgba(red(@color), green(@color), blue(@color), @alpha);
    @argb: argb(@rgba);
    background-color: @color;
    background-color: @rgba;
}

// Arrows
// Example Usage .arrow(4px, #000, up);
.arrow(@size:5px, @color: #333, @direction: right) {
    position: relative;

    &::before {
        content: "";
        position: absolute;
        border: @size solid transparent;
        z-index: -1;

        & when (@direction = right) {
            top: 50%;
            left: 100%;
            border-left-color: @color;
            transform: translate3d(0, -50%, 0);
        }

        & when (@direction = left) {
            top: 50%;
            left: 0;
            border-right-color: @color;
            transform: translate3d(-100%, -50%, 0);
        }

        & when (@direction = down) {
            top: 100%;
            left: 50%;
            border-top-color: @color;
            transform: translate3d(-50%, 0, 0);
        }

        & when (@direction = up) {
            top: 0;
            left: 50%;
            border-bottom-color: @color;
            transform: translate3d(-50%, -100%, 0);
        }
    }
}
