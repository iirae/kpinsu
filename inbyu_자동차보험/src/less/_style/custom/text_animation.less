
@duration-char: 400ms;

/* defaults */
.char {
    display: inline-block;
    .in &,
    .in &::before,
    .in &::after {
        opacity: 1;
        transform: translate3d(0, 0, 0);
        animation-delay: calc(@duration-char + var(--char-index) * 50ms - 50ms);
        transition-property: all;
        transition-duration: @duration-char;
        transition-delay: calc(@duration-char + var(--char-index) * 50ms - 50ms);
    }
}
span:nth-of-type(2n) {
    .char {
        .in &,
        .in &::before,
        .in &::after {
            opacity: 1;
            transform: translate3d(0, 0, 0);
            animation-delay: calc(@duration-char + var(--char-index) * 50ms + 400ms);
            transition-property: all;
            transition-duration: @duration-char;
            transition-delay: calc(@duration-char + var(--char-index) * 50ms + 400ms);
        }
    }
}


/* generates */
.generate-char(@n, @duration: 200ms, @i: 1) when (@i =< @n) { // char 트랜지션 기본값 생성
    .ie .in .char:nth-of-type(@{i}) {
        @t: @duration + (@i * 0.1s);
        animation-delay: @t;
        transition: all @duration @t;
    }
    .generate-char(@n, @duration, (@i + 1));
}
.generate-char(20, @duration-char); // 20개 생성

/* text--r */
.text--r {
    overflow: hidden;
    padding-bottom: 10px;
    .word {
        position: relative;
        &::before,
        &::after {
            position: absolute;
            display: block;
            content: '';
            bottom: 10px;
            height: 8px;
            background-color: #fff;
            visibility: visible;
        }
        &::before {
            width: 140%;
        }
        &::after {
            background-color: #000;
            width: 0;
        }
    }
    .out & {
        .word {
            color: #fff;
        }
    }
    .in & {
        .word {
            color: #000;
            &::after {
                width: 140%;
                transition-duration: 400ms;
                transition-delay: calc((var(--char-index) * 100ms) + 200ms);
            }
            &,
            &::after {
                transition-duration: 400ms;
                transition-delay: calc((var(--char-index) * 120ms) + 200ms);
            }
        }
    }
}

/* text--fading */
.text--fading {
    .char {
        opacity: 0;
        .in & {
            opacity: 1;
        }
    }
    .out & {
        .char {
            opacity: 0;
        }
    }
}

/* text-slide-up */
.text--slide-up {
    .char {
        opacity: 0;
        transform: translate(0, 20%);
    }
    .in & {
        .char {
            opacity: 1;
            transform: translate(0, 0);
        }
    }
}

/* slider */
.swiper-slide .text--slide-up .char {
    opacity: 0;
    transform: translate(0, 20%);
}
.in .swiper-slide-active .text--slide-up .char {
    opacity: 1;
    transform: translate(0, 0);
}

/* inviewed */
.js-inview .text--slide-up .char {
    opacity: 0;
    transform: translate(0, 20%);
}
.js-inview.in .text--slide-up .char {
    opacity: 1;
    transform: translate(0, 0);
}

/* text--slide */
.text--slide-left {
    .char {
        opacity: 0;
        // transform: translate(300%, 0) skewX(20deg);
        transform: translate(300%, 0);
    }
    .in & {
        .char {
            opacity: 1;
            transform: translate(0, 0) skewX(0deg);
            transition-delay: calc(var(--char-index) * 0.1s);
        }
    }
    &.skew {
        .char {
            transform: translate(300%, 0) skewX(20deg);
            .in & {
                transform: translate(0, 0) skewX(0deg);
            }
        }
    }
    &.reverse {
        .out & {
            .char {
                // transform: translate(-300%, 0) skewX(20deg);
                transform: translate(-300%, 0);
            }
        }
        .in & {
            .char {
                transition-delay: calc((var(--char-total) - var(--char-index)) * 0.1s);
            }
        }
    }
    &.reverse.skew {
        .out & {
            .char {
                transform: translate(-300%, 0) skewX(20deg);
            }
        }
    }
}


/* generates */
.generate-slide-left-char(@n, @i: 1) when (@i =< @n) { // char 트랜지션 기본값 생성
    .nocssvar .in .text--slide-left.reverse .char:nth-of-type(@{i}) {
        @t: (10 - @i) * 0.1s;
        transition-delay: @t;
    }
    .nocssvar .in .text--slide-left .char:nth-of-type(@{i}) {
        @t: @i * 0.1s;
        transition-delay: @t;
    }
    .generate-slide-left-char(@n, (@i + 1));
}
.generate-slide-left-char(10); // 20개 생성

/* text--swapsies */
.text--swapsies {
    .char {
        opacity: 0;
        &:nth-of-type(odd) {
            transform: translateX(100%);
        }
        &:nth-of-type(even) {
            transform: translateX(-100%);
        }
    }
    .in & {
        .char {
            opacity: 1;
            animation-duration: 0.5s;
            animation-fill-mode: forwards;
            &:nth-of-type(odd) {
                transform: translateX(100%);
                animation-name: swap-left;
            }
            &:nth-of-type(even) {
                transform: translateX(-100%);
                animation-name: swap-right;
            }
        }
    }
}

@keyframes swap-right {
    25% {
        transform: translateX(-100%) translateY(-100%);
    }
    75% {
        transform: translateX(0) translateY(-100%);
    }
    100% {
        transform: translateX(0) translateY(0);
    }
}
@keyframes swap-left {
    25% {
        transform: translateX(100%) translateY(100%);
    }
    75% {
        transform: translateX(0) translateY(100%);
    }
    100% {
        transform: translateX(0) translateY(0);
    }
}

/* text--flipping */
.text--flipping {
    .char {
        transform: rotateY(180deg);
        .in & {
            transform: rotateY(0deg);
        }
    }
}

/* text--karaoke */
.text--karaoke {
    .char {
        color: rgba(255, 255, 255, 0.15);
        transition-duration: 0s;
        &::after {
            -ms-clip-path: inset(0 100% 0 0);
            clip-path: inset(0 100% 0 0);
            color: #fff;
            visibility: visible;
        }
    }
    .in & {
        .char {
            transition-duration: 0.1s;
            &::after {
                -ms-clip-path: inset(0 0 0 0);
                clip-path: inset(0 0 0 0);
            }
        }
    }
}

/* text--filling */
.text--filling {
    .char {
        color: rgba(255, 255, 255, 0.15);
        color: #000;
        &::after {
            color: #fff;
            visibility: visible;
            clip-path: inset(100% 0 0 0);
        }
    }
    .in & {
        .char {
            &::after {
                clip-path: inset(0 0 0 0);
            }
        }
    }
}

/* text--block */
.text--blocks {
    .char {
        visibility: hidden;
    }
    .in & {
        display: block;
        overflow: hidden;
        position: relative;
        .char {
            transition-delay: 0.5s !important;
            visibility: visible;
        }
        &::after {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            right: 0;
            width: 100%;
            background: #00965f;
            animation-name: block;
            animation-duration: 500ms;
            animation-delay: 250ms;
            animation-fill-mode: both;
        }
        &:nth-of-type(2)::after {
            animation-delay: 400ms;
        }
    }
    .in &.inline-block {
        display: inline-block;
    }
}

@keyframes block {
    0% {
        transform: translate(-110%, 0);
        width: 100%;
    }
    45%, 55% {
        transform: translate(0, 0);
        width: 100%;
    }
    100% {
        transform: translate(110%, 0);
        width: 0;
    }
}

/* text--scaling */
.text--scaling {
    .char {
        opacity: 0;
        transform: scale(0);
        .in & {
            opacity: 1;
            transform: scale(1);
        }
    }
}

/* text--turning */
.text--turning {
    .char {
        transform: rotateY(90deg);
        .in & {
            transform: rotateY(0deg);
        }
    }
}

/* text--bulge */
.text--bulge {
    .in & {
        .char {
            animation-name: bulge;
            animation-duration: 0.25s;
        }
    }
}

@keyframes bulge {
    50% {
        transform: scale(1.5);
    }
}

/* text--perspective */
.text--perspective {
    perspective: 1000px;
    .char {
        opacity: 0;
        transform: translate3d(-25px, 20px, -800px);
    }
    .in & {
        .char {
            opacity: 1;
            transform: translate3d(0, 0, 0);
            transition: transform 0.25s calc(0.25s + var(--char-index) * 0.1s), opacity 0.05s calc(0.25s + var(--char-index) * 0.1s);
        }
    }
}

/* text--zipping */
.text--zipping {
    overflow: hidden;
    .char {
        opacity: 0;
        &:nth-of-type(odd) {
            transform: translate(0, -100%);
        }
        &:nth-of-type(even) {
            transform: translate(0, 100%);
        }
    }
    .in & {
        .char {
            opacity: 1;
            transform: translate(0, 0);
            transition:
                transform 0.25s calc(0.25s + var(--char-index) * 0.1s),
                opacity 0.10s calc(0.25s + var(--char-index) * 0.1s);
        }
    }
}


/* text--bubbling  */
.text--bubbling {
    .char {
        transform: scale(0.5);
        opacity: 0;
    }
    .in & {
        .char {
            transform: scale(1);
            opacity: 1;
            transition-timing-function: cubic-bezier(0, 0, 0.58, 1);
            &:nth-of-type(4n+1) {
                transition-delay: 0.5s;
            }
            &:nth-of-type(4n+2) {
                transition-delay: 0.2s;
            }
            &:nth-of-type(4n+3) {
                transition-delay: 0.4s;
            }
            &:nth-of-type(4) {
                transition-delay: 0.6s;
            }
        }
    }
}

/* text--blowing  */
.text--blowing {
    .char {
        animation-fill-mode: both;
        transform-origin: left bottom;
    }
    .in & {
        .char {
            animation-name: blowing;
            animation-delay: calc(var(--char-index) * 25ms);
            animation-duration: 1s;
        }
    }
}

@keyframes blowing {
    50%, 60%, 70% {
        transform: skewX(-35deg);
    }
    55%, 65%, 75% {
        transform: skewX(-40deg);
    }
}

/* text--random */
.text--random {
    .char {
        opacity: 0;
        &:nth-of-type(1) {
            transform: translateX(-67%) translateY(-119%);
        }
        &:nth-of-type(2) {
            transform: translateX(-115%) translateY(-91%);
        }
        &:nth-of-type(3) {
            transform: translateX(-223%) translateY(246%);
        }
        &:nth-of-type(4) {
            transform: translateX(-115%) translateY(224%);
        }
        &:nth-of-type(5) {
            transform: translateX(138%) translateY(172%);
        }
        &:nth-of-type(6) {
            transform: translateX(36%) translateY(98%);
        }
    }
    .in & {
        .char {
            opacity: 1;
            transform: translateX(0) translateY(0);
        }
    }
}

/* text--swinging */
.text--swinging {
    .char {
        opacity: 0;
        transform: rotate(-90deg);
    }
    .in & {
        .char {
            opacity: 1;
            transform: rotate(0deg);
            transform-origin: calc((var(--char-index)) * 100%) -100%;
            transition-delay: calc((var(--char-index)) * 0.1s);
        }
    }
    &.reverse {
        .char {
            opacity: 0;
            transform: rotate(90deg);
        }
        .in & {
            .char {
                opacity: 1;
                transform: rotate(0deg);
                transform-origin: calc((var(--char-total) - var(--char-index)) * 100%) -100%;
                transition-delay: calc((var(--char-total) - var(--char-index)) * 0.1s);
            }
        }
    }
}

/* text--meeting */
.text--meeting {
    overflow: hidden;
    .char {
        transition-delay: calc(var(--char-index) * 0.1s);
        transform: rotate(-180deg);
        &:nth-of-type(even) {
            transform-origin: top right;
        }
        &:nth-of-type(odd) {
            transform-origin: bottom left;
        }
    }
    .in & {
        .char {
            transform: rotate(0deg);
        }
    }
    &.reverse {
        .char {
            transition-delay: calc((var(--char-total) - var(--char-index)) * 0.1s);
        }
        .out & {
            .char {
                transform: rotate(180deg);
            }
        }
    }
}

/* text--conveyor */
.text--conveyor {
    .in & {
        .char {
            transform-origin: left bottom;
            animation: convey 1s both linear;
            animation-delay: calc((var(--char-total) - var(--char-index)) * 0.15s);
            transition: none;
        }
    }
    .out & {
        .char {
            opacity: 0;
        }
    }
}
@keyframes convey {
    0% {
        opacity: 0;
        transform: translate(calc((var(--char-total) - (var(--char-total) - var(--char-index))) * -100%), 0) rotate(-180deg) translate(calc((var(--char-total) - var(--char-index)) * -100%), 0);
    }
    40% {
        transform: translate(calc((var(--char-total) - (var(--char-total) - var(--char-index))) * -100%), 0) rotate(-180deg) translate(0, 0);
    }
    50% {
        transform: translate(calc((var(--char-total) - (var(--char-total) - var(--char-index))) * -100%), 0) rotate(0deg) translate(0, 0);
    }
    100% {
        transform: translate(0, 0) rotate(0deg) translate(0, 0);
    }
}
